name: Publish MCP Registry

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Publish PyPI"]
    types: [completed]

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  on-success:
    name: Publish to MCP Registry
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MCP Publisher
        run: |
          set -e
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')
          LATEST_VERSION=$(curl -s https://api.github.com/repos/modelcontextprotocol/registry/releases/latest | jq -r '.tag_name')
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/${LATEST_VERSION}/mcp-publisher_${LATEST_VERSION#v}_${OS}_${ARCH}.tar.gz" | tar xz mcp-publisher

      - name: Login to MCP Registry
        run: ./mcp-publisher login github-oidc

      - name: Publish to MCP Registry
        run: |
          echo "PyPI workflow succeeded - Publishing to MCP Registry"
          ./mcp-publisher publish

  on-failure:
    name: Handle PyPI Failure
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Log PyPI Failure
        run: echo "PyPI workflow failed - MCP Registry publication skipped"
